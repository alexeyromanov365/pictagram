diff --git a/Gemfile b/Gemfile
index 3351c54..963bf0d 100644
--- a/Gemfile
+++ b/Gemfile
@@ -24,6 +24,7 @@ gem 'simple_form'
 gem 'carrierwave'
 gem 'mini_magick'
 gem 'izitoast', git: 'https://github.com/DmitryArtyomov/iziToast-rails'
+gem 'activeadmin'

 group :development, :test do
   gem 'byebug', platforms: [:mri, :mingw, :x64_mingw]
diff --git a/Gemfile.lock b/Gemfile.lock
index f046478..1348432 100644
--- a/Gemfile.lock
+++ b/Gemfile.lock
@@ -30,6 +30,20 @@ GEM
       erubi (~> 1.4)
       rails-dom-testing (~> 2.0)
       rails-html-sanitizer (~> 1.0, >= 1.0.3)
+    activeadmin (1.0.0)
+      arbre (>= 1.1.1)
+      bourbon
+      coffee-rails
+      formtastic (~> 3.1)
+      formtastic_i18n
+      inherited_resources (~> 1.7)
+      jquery-rails
+      jquery-ui-rails
+      kaminari (>= 0.15, < 2.0)
+      railties (>= 4.2, < 5.2)
+      ransack (~> 1.3)
+      sass-rails
+      sprockets (< 4.1)
     activejob (5.1.1)
       activesupport (= 5.1.1)
       globalid (>= 0.3.6)
@@ -46,6 +60,8 @@ GEM
       tzinfo (~> 1.1)
     addressable (2.5.1)
       public_suffix (~> 2.0, >= 2.0.2)
+    arbre (1.1.1)
+      activesupport (>= 3.0.0)
     arel (8.0.0)
     autoprefixer-rails (7.1.1)
       execjs
@@ -54,6 +70,9 @@ GEM
     bootstrap-sass (3.3.7)
       autoprefixer-rails (>= 5.2.1)
       sass (>= 3.3.4)
+    bourbon (4.3.4)
+      sass (~> 3.4)
+      thor (~> 0.19)
     builder (3.2.3)
     byebug (9.0.6)
     cancancan (2.0.0)
@@ -88,9 +107,20 @@ GEM
     erubi (1.6.0)
     execjs (2.7.0)
     ffi (1.9.18)
+    formtastic (3.1.5)
+      actionpack (>= 3.2.13)
+    formtastic_i18n (0.6.0)
     globalid (0.4.0)
       activesupport (>= 4.2.0)
+    has_scope (0.7.1)
+      actionpack (>= 4.1, < 5.2)
+      activesupport (>= 4.1, < 5.2)
     i18n (0.8.1)
+    inherited_resources (1.7.2)
+      actionpack (>= 3.2, < 5.2.x)
+      has_scope (~> 0.6)
+      railties (>= 3.2, < 5.2.x)
+      responders
     jbuilder (2.6.4)
       activesupport (>= 3.0.0)
       multi_json (>= 1.2)
@@ -98,6 +128,20 @@ GEM
       rails-dom-testing (>= 1, < 3)
       railties (>= 4.2.0)
       thor (>= 0.14, < 2.0)
+    jquery-ui-rails (6.0.1)
+      railties (>= 3.2.16)
+    kaminari (1.0.1)
+      activesupport (>= 4.1.0)
+      kaminari-actionview (= 1.0.1)
+      kaminari-activerecord (= 1.0.1)
+      kaminari-core (= 1.0.1)
+    kaminari-actionview (1.0.1)
+      actionview
+      kaminari-core (= 1.0.1)
+    kaminari-activerecord (1.0.1)
+      activerecord
+      kaminari-core (= 1.0.1)
+    kaminari-core (1.0.1)
     listen (3.1.5)
       rb-fsevent (~> 0.9, >= 0.9.4)
       rb-inotify (~> 0.9, >= 0.9.7)
@@ -119,6 +163,8 @@ GEM
       mini_portile2 (~> 2.1.0)
     orm_adapter (0.5.0)
     pg (0.20.0)
+    polyamorous (1.3.1)
+      activerecord (>= 3.0)
     pry (0.10.4)
       coderay (~> 1.1.0)
       method_source (~> 0.8.1)
@@ -154,6 +200,12 @@ GEM
       rake (>= 0.8.7)
       thor (>= 0.18.1, < 2.0)
     rake (12.0.0)
+    ransack (1.8.3)
+      actionpack (>= 3.0)
+      activerecord (>= 3.0)
+      activesupport (>= 3.0)
+      i18n
+      polyamorous (~> 1.3)
     rb-fsevent (0.9.8)
     rb-inotify (0.9.8)
       ffi (>= 0.5.0)
@@ -221,6 +273,7 @@ PLATFORMS
   ruby

 DEPENDENCIES
+  activeadmin
   bootstrap-sass
   byebug
   cancancan
diff --git a/app/assets/javascripts/application.js b/app/assets/javascripts/application.js
deleted file mode 100644
index 2ae5461..0000000
--- a/app/assets/javascripts/application.js
+++ /dev/null
@@ -1,18 +0,0 @@
-// This is a manifest file that'll be compiled into application.js, which will include all the files
-// listed below.
-//
-// Any JavaScript/Coffee file within this directory, lib/assets/javascripts, or any plugin's
-// vendor/assets/javascripts directory can be referenced here using a relative path.
-//
-// It's not advisable to add code directly here, but if you do, it'll appear at the bottom of the
-// compiled file. JavaScript code in this file should be added after the last require_* statement.
-//
-// Read Sprockets README (https://github.com/rails/sprockets#sprockets-directives) for details
-// about supported directives.
-//
-//= require jquery
-//= require jquery_ujs
-//= require turbolinks
-//= require bootstrap-sprockets
-//= require_tree .
-//= require iziToast
\ No newline at end of file
diff --git a/app/assets/javascripts/cable.js b/app/assets/javascripts/cable.js
deleted file mode 100644
index c380d1d..0000000
--- a/app/assets/javascripts/cable.js
+++ /dev/null
@@ -1,6 +0,0 @@
-#= require action_cable
-#= require_self
-#= require_tree .
-
-@App = {}
-App.cable = ActionCable.createConsumer()
\ No newline at end of file
diff --git a/app/assets/javascripts/channels/notification.coffee b/app/assets/javascripts/channels/notification.coffee
index 69b1583..d93bf52 100644
--- a/app/assets/javascripts/channels/notification.coffee
+++ b/app/assets/javascripts/channels/notification.coffee
@@ -1,14 +1,16 @@
-App.notification = App.cable.subscriptions.create "NotificationChannel",
-  connected: ->
+$(document).on 'turbolinks:load', ->
+  App.notification = App.cable.subscriptions.create "NotificationChannel",
+    connected: ->

-  disconnected: ->
+    disconnected: ->

-  received: (data) ->
-    console.log(data)
-    iziToast.show
-      color: 'dark'
-      icon: 'icon-person'
-      title: 'Hey'
-      message: 'Welcome!'
-      position: 'center'
-      progressBarColor: 'rgb(0, 255, 184)'
\ No newline at end of file
+    received: (data) ->
+      console.log(data)
+
+      iziToast.show
+        color: 'white'
+        image: data.icon
+        title: data.name
+        message: data.text
+        position: 'bottomRight'
+        progressBarColor: 'rgb(0, 255, 184)'
\ No newline at end of file
diff --git a/app/assets/stylesheets/application.sass b/app/assets/stylesheets/application.sass
index 7f0bfb4..09f3a19 100644
--- a/app/assets/stylesheets/application.sass
+++ b/app/assets/stylesheets/application.sass
@@ -58,4 +58,4 @@
   height: 25px

 .navbar-form.navbar-left
-  margin-left: 25%
+  margin-left: 25%
\ No newline at end of file
diff --git a/app/channels/application_cable/connection.rb b/app/channels/application_cable/connection.rb
index 2734d6c..2f771b9 100644
--- a/app/channels/application_cable/connection.rb
+++ b/app/channels/application_cable/connection.rb
@@ -8,7 +8,8 @@ module ApplicationCable

     private
       def find_verified_user
-        if verified_user = User.find_by(id: cookies.signed[:user_id])
+        binding.pry
+        if verified_user = env['warden'].user
           verified_user
         else
           reject_unauthorized_connection
diff --git a/app/channels/notification_channel.rb b/app/channels/notification_channel.rb
index fa24532..f5b355a 100644
--- a/app/channels/notification_channel.rb
+++ b/app/channels/notification_channel.rb
@@ -1,6 +1,6 @@
 class NotificationChannel < ApplicationCable::Channel
   def subscribed
-    stream_from current_user
+    stream_for current_user
   end

   def unsubscribed
diff --git a/app/controllers/comments_controller.rb b/app/controllers/comments_controller.rb
index a77a51c..d05c866 100644
--- a/app/controllers/comments_controller.rb
+++ b/app/controllers/comments_controller.rb
@@ -23,6 +23,7 @@ class CommentsController < ApplicationController
     @comment.user = current_user
     respond_to do |format|
       if @comment.save
+        Notifications::CommentNotification.new(@comment).notify
         format.html { redirect_to [@album, @photo], notice: 'Comment was successfully created.' }
         format.js
       else
diff --git a/app/controllers/notifications_controller.rb b/app/controllers/notifications_controller.rb
deleted file mode 100644
index 389ad5b..0000000
--- a/app/controllers/notifications_controller.rb
+++ /dev/null
@@ -1,3 +0,0 @@
-class NotificationsController < ApplicationController
-
-end
\ No newline at end of file
diff --git a/app/controllers/relationships_controller.rb b/app/controllers/relationships_controller.rb
index 673dee1..6be5733 100644
--- a/app/controllers/relationships_controller.rb
+++ b/app/controllers/relationships_controller.rb
@@ -4,6 +4,7 @@ class RelationshipsController < ApplicationController
     @user = User.find(params[:followed_id])
     current_user.follow(@user)
     respond_to do |format|
+      Notifications::FollowNotification.new(@user).notify
       format.html { redirect_to @user }
       format.js
     end
diff --git a/app/models/ability.rb b/app/models/ability.rb
index ed329aa..43809fd 100644
--- a/app/models/ability.rb
+++ b/app/models/ability.rb
@@ -5,6 +5,7 @@ class Ability
     user ||= User.new # guest user (not logged in)
       if user.has_attribute?(:admin)
         can :manage, :all
+
       else
         can :read, :all
       end
diff --git a/app/models/user.rb b/app/models/user.rb
index b22f5c0..77a14b3 100644
--- a/app/models/user.rb
+++ b/app/models/user.rb
@@ -19,6 +19,8 @@ class User < ApplicationRecord

   has_many :feed_photos, through: :following, source: :photos

+  validates :first_name, :last_name, presence: true
+
   def follow(other_user)
     active_relationships.create(followed_id: other_user.id)
   end
diff --git a/app/views/albums/index.html.slim b/app/views/albums/index.html.slim
index 41478ca..7a5dffb 100644
--- a/app/views/albums/index.html.slim
+++ b/app/views/albums/index.html.slim
@@ -1,6 +1,6 @@
 h1
   = image_tag(@user.avatar.url, class: 'img-circle') if @user.avatar?
-  = @user.email + " Albums"
+  = " " + @user.email + " Albums"
   div
     small
       = link_to "Followers: ", relations_user_path(@user)
diff --git a/app/views/searches/search.html.slim b/app/views/searches/search.html.slim
index 9ccd67a..d7b6bde 100644
--- a/app/views/searches/search.html.slim
+++ b/app/views/searches/search.html.slim
@@ -1,4 +1,4 @@
-- if @albums.blank?
+- if @albums.blank? && @tags.blank?
   h4
     | There are no data containing #{params[:search]}.
 - else
@@ -7,24 +7,26 @@
       tr
         th colspan="4"
     .container-fluid
-      h3 Albums:
-      .row
-        - @albums.each do |album|
-          .col-md-3
-            div
-              = album.title
-            div
-              - if album.photos.any? && album.photos.count > 3
-                = link_to user_album_photos_path(album.user, album)
-                  div
-                    - album.photos.sample(4).each do |photo|
-                      div style="display:inline-block"
-                        = image_tag(photo.picture.small.url, width: '103')
-              - elsif album.photos.count < 4 && album.photos.count > 0
-                = link_to user_album_photos_path(album.user, album)
-                  = image_tag(album.photos.sample.picture.small.url, class: 'img-responsive')
-              - else
-                = image_tag("/assets/empty_album.png", class: 'img-responsive')
-              br
-      h3 Tags:
-      = raw @tags.map(&:name).map{ |t| link_to t, tag_path(t), class: 'tag tag-primary' }.join(' ')
\ No newline at end of file
+      - if @albums.present?
+        h3 Albums:
+        .row
+          - @albums.each do |album|
+            .col-md-3
+              div
+                = album.title
+              div
+                - if album.photos.any? && album.photos.count > 3
+                  = link_to user_album_photos_path(album.user, album)
+                    div
+                      - album.photos.sample(4).each do |photo|
+                        div style="display:inline-block"
+                          = image_tag(photo.picture.small.url, width: '103')
+                - elsif album.photos.count < 4 && album.photos.count > 0
+                  = link_to user_album_photos_path(album.user, album)
+                    = image_tag(album.photos.sample.picture.small.url, class: 'img-responsive')
+                - else
+                  = image_tag("/assets/empty_album.png", class: 'img-responsive')
+                br
+      - if @tags.present?
+        h3 Tags:
+        = raw @tags.map(&:name).map{ |t| link_to t, tag_path(t), class: 'tag tag-primary' }.join(' ')
\ No newline at end of file
diff --git a/config/routes.rb b/config/routes.rb
index d31c93c..108375b 100644
--- a/config/routes.rb
+++ b/config/routes.rb
@@ -1,5 +1,8 @@
 Rails.application.routes.draw do

+  resources :search_suggestions
+  devise_for :admin_users, ActiveAdmin::Devise.config
+  ActiveAdmin.routes(self)
   devise_for :users, :controllers => { registrations: 'registrations' }

   devise_scope :user do
diff --git a/db/schema.rb b/db/schema.rb
index e6fda15..a98f5d8 100644
--- a/db/schema.rb
+++ b/db/schema.rb
@@ -10,11 +10,42 @@
 #
 # It's strongly recommended that you check this file into your version control system.

-ActiveRecord::Schema.define(version: 20170627130522) do
+ActiveRecord::Schema.define(version: 20170712171032) do

   # These are extensions that must be enabled in order to support this database
   enable_extension "plpgsql"

+  create_table "active_admin_comments", force: :cascade do |t|
+    t.string "namespace"
+    t.text "body"
+    t.string "resource_type"
+    t.bigint "resource_id"
+    t.string "author_type"
+    t.bigint "author_id"
+    t.datetime "created_at", null: false
+    t.datetime "updated_at", null: false
+    t.index ["author_type", "author_id"], name: "index_active_admin_comments_on_author_type_and_author_id"
+    t.index ["namespace"], name: "index_active_admin_comments_on_namespace"
+    t.index ["resource_type", "resource_id"], name: "index_active_admin_comments_on_resource_type_and_resource_id"
+  end
+
+  create_table "admin_users", force: :cascade do |t|
+    t.string "email", default: "", null: false
+    t.string "encrypted_password", default: "", null: false
+    t.string "reset_password_token"
+    t.datetime "reset_password_sent_at"
+    t.datetime "remember_created_at"
+    t.integer "sign_in_count", default: 0, null: false
+    t.datetime "current_sign_in_at"
+    t.datetime "last_sign_in_at"
+    t.inet "current_sign_in_ip"
+    t.inet "last_sign_in_ip"
+    t.datetime "created_at", null: false
+    t.datetime "updated_at", null: false
+    t.index ["email"], name: "index_admin_users_on_email", unique: true
+    t.index ["reset_password_token"], name: "index_admin_users_on_reset_password_token", unique: true
+  end
+
   create_table "albums", force: :cascade do |t|
     t.string "title"
     t.string "description"
@@ -52,10 +83,16 @@ ActiveRecord::Schema.define(version: 20170627130522) do
     t.index ["follower_id"], name: "index_relationships_on_follower_id"
   end

+  create_table "search_suggestions", force: :cascade do |t|
+    t.string "term"
+    t.datetime "created_at", null: false
+    t.datetime "updated_at", null: false
+  end
+
   create_table "taggings", force: :cascade do |t|
+    t.bigint "tag_id"
     t.string "taggable_type"
     t.bigint "taggable_id"
-    t.bigint "tag_id"
     t.datetime "created_at", null: false
     t.datetime "updated_at", null: false
     t.index ["tag_id"], name: "index_taggings_on_tag_id"
diff --git a/db/seeds.rb b/db/seeds.rb
index 68171bd..ba7b9ae 100644
--- a/db/seeds.rb
+++ b/db/seeds.rb
@@ -1,14 +1,61 @@
 User.create!(first_name: "Alexei",
+last_name: "Dmamaaassd",
 email: "al@a.com",
 password: '123456',
 password_confirmation: "123456")

 User.create!(first_name: "Alex",
+last_name: "DFSasfasfdaf",
 email: "a@a.com",
 password: '123456',
 password_confirmation: "123456")

 User.create!(first_name: "Alexxx",
+last_name: "HJDDJADAS",
 email: "a1@a.com",
 password: '123456',
-password_confirmation: "123456")
\ No newline at end of file
+password_confirmation: "123456")
+
+AdminUser.create!(email: 'admin@example.com',
+password: 'password',
+password_confirmation: 'password')
+
+Album.create(title:"Title 6",
+description: "Description 4",
+user: User.second)
+
+Album.create(title:"Title 63",
+description: "Description 432",
+user: User.first)
+
+Album.create(title:"Title 3263",
+description: "Description 44332",
+user: User.first)
+
+Album.create(title:"Title 64323",
+description: "Description 432543",
+user: User.second)
+
+Album.create(title:"Title 643223",
+description: "Description 432543",
+user: User.second)
+
+Album.create(title:"Title 65433",
+description: "Description 432543",
+user: User.second)
+
+Album.create(title:"Title 644323",
+description: "Description 43254432243 this is",
+user: User.second)
+
+Album.create(title:"Title 5435",
+description: "Description 432543",
+user: User.third)
+
+Album.create(title:"Title 432423",
+description: "Description 432543",
+user: User.third)
+
+Album.create(title:"Title 24314",
+description: "Description 432543",
+user: User.third)
\ No newline at end of file
diff --git a/public/uploads/user/avatar/2/small_AM.png b/public/uploads/user/avatar/2/small_AM.png
index 63fbf51..3ed2d3c 100644
Binary files a/public/uploads/user/avatar/2/small_AM.png and b/public/uploads/user/avatar/2/small_AM.png differ
